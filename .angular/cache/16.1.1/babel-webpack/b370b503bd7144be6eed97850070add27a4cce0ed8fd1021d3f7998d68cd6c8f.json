{"ast":null,"code":"import { User } from 'src/app/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/userback.service\";\nimport * as i2 from \"@angular/forms\";\nexport class StatusComponent {\n  constructor(userbackService) {\n    this.userbackService = userbackService;\n    this.user = new User();\n  }\n  formatDateToYYYYMMDD(date) {\n    return date.toISOString().split('T')[0];\n  }\n  onSubmit() {\n    const now = new Date();\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now); // Format `yyyy-MM-dd`\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\n    if (this.user.activeUntil) {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\n    } else {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\n    }\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\n    const userToSend = {\n      ...this.user,\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\n      activeUntil: new Date(this.user.activeUntil).toISOString()\n    };\n    this.userbackService.addUser(userToSend).subscribe(response => {\n      if (response.status === 200 || response.status === 201) {\n        console.log('User added successfully', response);\n      } else {\n        console.error('Unexpected response status', response.status);\n      }\n    }, error => {\n      console.error('Error adding user', error);\n    });\n  }\n}\nStatusComponent.ɵfac = function StatusComponent_Factory(t) {\n  return new (t || StatusComponent)(i0.ɵɵdirectiveInject(i1.UserbackService));\n};\nStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StatusComponent,\n  selectors: [[\"app-status\"]],\n  decls: 78,\n  vars: 11,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"form-container\"], [\"action\", \"/submit-user\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"column\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"pattern\", \"[A-Za-z ]{3,20}\", \"title\", \"Username must be letters only, with spaces allowed, and between 3 to 20 characters long.\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"column\", \"two-cols\"], [\"for\", \"active\"], [\"type\", \"checkbox\", \"id\", \"active\", \"name\", \"active\", \"checked\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"recycleBin\"], [\"type\", \"checkbox\", \"id\", \"recycleBin\", \"name\", \"recycleBin\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"activeUntil\"], [\"type\", \"date\", \"id\", \"activeUntil\", \"name\", \"activeUntil\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateCreation\"], [\"type\", \"date\", \"id\", \"dateCreation\", \"name\", \"dateCreation\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"mobile\"], [\"type\", \"text\", \"id\", \"mobile\", \"name\", \"mobile\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"roleId\"], [\"type\", \"text\", \"id\", \"roleId\", \"name\", \"roleId\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"role\"], [\"id\", \"role\", \"name\", \"role\", \"required\", \"\"], [\"value\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"name\", \"prenom\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"column\", 2, \"width\", \"100%\", \"text-align\", \"center\"], [1, \"submit-row\"], [\"type\", \"submit\", \"value\", \"Submit\"]],\n  template: function StatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"User Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function StatusComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"div\", 6)(11, \"div\")(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.userName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 6)(20, \"div\", 5)(21, \"div\", 11)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Active:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.user.active = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\", 14);\n      i0.ɵɵtext(27, \"Recycle Bin:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.user.recycleBin = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"div\", 11)(31, \"label\", 16);\n      i0.ɵɵtext(32, \"Active Until:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.user.activeUntil = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 11)(35, \"label\", 18);\n      i0.ɵɵtext(36, \"Date Creation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_37_listener($event) {\n        return ctx.user.dateCreation = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(38, \"div\", 6)(39, \"div\")(40, \"label\", 20);\n      i0.ɵɵtext(41, \"Mobile:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.user.mobile = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\")(44, \"label\", 22);\n      i0.ɵɵtext(45, \"RoleID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_46_listener($event) {\n        return ctx.user.roleId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\")(48, \"label\", 24);\n      i0.ɵɵtext(49, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"select\", 25)(51, \"option\", 26);\n      i0.ɵɵtext(52, \"Select Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"option\", 27);\n      i0.ɵɵtext(54, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"option\", 28);\n      i0.ɵɵtext(56, \"Medecin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"option\", 29);\n      i0.ɵɵtext(58, \"Infirmier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"option\", 30);\n      i0.ɵɵtext(60, \"Pharmacien\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(61, \"div\", 5)(62, \"div\", 6)(63, \"label\", 31);\n      i0.ɵɵtext(64, \"Nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"input\", 32);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_65_listener($event) {\n        return ctx.user.nom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(66, \"div\", 6)(67, \"label\", 33);\n      i0.ɵɵtext(68, \"Pr\\u00E9nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"input\", 34);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_69_listener($event) {\n        return ctx.user.prenom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(70, \"div\", 6)(71, \"label\", 35);\n      i0.ɵɵtext(72, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"input\", 36);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_73_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(74, \"div\", 5)(75, \"div\", 37)(76, \"div\", 38);\n      i0.ɵɵelement(77, \"input\", 39);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.userName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.active);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.recycleBin);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.activeUntil);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.dateCreation);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.mobile);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.roleId);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.nom);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.prenom);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.PatternValidator, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"\\n\\n    .form-container[_ngcontent-%COMP%] {\\n      max-width: 1200px;\\n      margin: 0 auto;\\n      padding: 20px;\\n      background-color: #f0f0f0;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n      background-color: #f9f9f9;\\n      padding: 20px;\\n      border-radius: 10px;\\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n      margin-bottom: 15px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 5px;\\n      font-weight: bold;\\n      text-transform: capitalize; \\n\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 10px;\\n      margin: 8px 0;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-row[_ngcontent-%COMP%] {\\n      text-align: center; \\n\\n      margin-top: 20px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n      background-color: #000 !important;\\n      color: #fff !important;\\n      padding: 12px 20px;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n      transition: background-color 0.3s ease;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n      background-color: #000;\\n      color: #fff;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 10px;\\n      margin: 8px 0;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n      background-color: #fff;\\n      font-size: 16px;\\n      cursor: pointer;\\n      appearance: none;\\n      -webkit-appearance: none;\\n      -moz-appearance: none;\\n      background-image: url('data:image/svg+xml;utf8,<svg fill=\\\"currentColor\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 16 16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M7.68 11.895a.75.75 0 0 1-1.06-1.06L7.94 9.44V5.75a.75.75 0 0 1 1.5 0v3.69l1.32 1.33a.75.75 0 0 1-1.06 1.06L8 10.56l-.32.32z\\\"/></svg>');\\n      background-repeat: no-repeat;\\n      background-position: right 10px top 50%, 0 0;\\n      background-size: 16px auto, 100%;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: space-between;\\n      margin-bottom: 15px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%] {\\n      width: 31%;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .column.two-cols[_ngcontent-%COMP%] {\\n      width: 48%;\\n    }\"]\n});","map":{"version":3,"names":["User","StatusComponent","constructor","userbackService","user","formatDateToYYYYMMDD","date","toISOString","split","onSubmit","now","Date","dateCreation","activeUntil","userToSend","addUser","subscribe","response","status","console","log","error","i0","ɵɵdirectiveInject","i1","UserbackService","selectors","decls","vars","consts","template","StatusComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","StatusComponent_Template_form_ngSubmit_8_listener","StatusComponent_Template_input_ngModelChange_14_listener","$event","userName","StatusComponent_Template_input_ngModelChange_18_listener","password","StatusComponent_Template_input_ngModelChange_24_listener","active","StatusComponent_Template_input_ngModelChange_28_listener","recycleBin","StatusComponent_Template_input_ngModelChange_33_listener","StatusComponent_Template_input_ngModelChange_37_listener","StatusComponent_Template_input_ngModelChange_42_listener","mobile","StatusComponent_Template_input_ngModelChange_46_listener","roleId","StatusComponent_Template_input_ngModelChange_65_listener","nom","StatusComponent_Template_input_ngModelChange_69_listener","prenom","StatusComponent_Template_input_ngModelChange_73_listener","email","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\status\\status.component.ts","C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\status\\status.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { User } from 'src/app/models/User';\r\nimport { UserbackService } from 'src/app/services/userback.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent {\r\n  user: User = new User();\r\n\r\n  constructor(private userbackService: UserbackService) { }\r\n\r\n  private formatDateToYYYYMMDD(date: Date): string {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  onSubmit() {\r\n    const now = new Date();\r\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now);  // Format `yyyy-MM-dd`\r\n  \r\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\r\n    if (this.user.activeUntil) {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\r\n    } else {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\r\n    }\r\n  \r\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\r\n    const userToSend = {\r\n      ...this.user,\r\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\r\n      activeUntil: new Date(this.user.activeUntil).toISOString()\r\n    };\r\n  \r\n    this.userbackService.addUser(userToSend).subscribe(\r\n      (response: HttpResponse<any>) => {\r\n        if (response.status === 200 || response.status === 201) {\r\n          console.log('User added successfully', response);\r\n        } else {\r\n          console.error('Unexpected response status', response.status);\r\n        }\r\n      },\r\n      error => {\r\n        console.error('Error adding user', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>User Form</title>\r\n  <style>\r\n    /* Form Container */\r\n    .form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      background-color: #f0f0f0;\r\n    }\r\n\r\n    /* Form Style */\r\n    .form-container form {\r\n      background-color: #f9f9f9;\r\n      padding: 20px;\r\n      border-radius: 10px;\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    /* Form Input Fields */\r\n    .form-container form div {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .form-container form label {\r\n      display: block;\r\n      margin-bottom: 5px;\r\n      font-weight: bold;\r\n      text-transform: capitalize; /* Convert label text to title case */\r\n    }\r\n\r\n    .form-container form input,\r\n    .form-container form select {\r\n      width: 100%;\r\n      padding: 10px;\r\n      margin: 8px 0;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .form-container form .submit-row {\r\n      text-align: center; /* Center content horizontally */\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .form-container form input[type=\"submit\"] {\r\n      background-color: #000 !important;\r\n      color: #fff !important;\r\n      padding: 12px 20px;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    /* Form Submit Button Hover Effect */\r\n    .form-container form input[type=\"submit\"]:hover {\r\n      background-color: #000;\r\n      color: #fff;\r\n    }\r\n\r\n    /* Custom Select Style */\r\n    .form-container form select {\r\n      width: 100%;\r\n      padding: 10px;\r\n      margin: 8px 0;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      background-color: #fff;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      appearance: none;\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      background-image: url('data:image/svg+xml;utf8,<svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M7.68 11.895a.75.75 0 0 1-1.06-1.06L7.94 9.44V5.75a.75.75 0 0 1 1.5 0v3.69l1.32 1.33a.75.75 0 0 1-1.06 1.06L8 10.56l-.32.32z\"/></svg>');\r\n      background-repeat: no-repeat;\r\n      background-position: right 10px top 50%, 0 0;\r\n      background-size: 16px auto, 100%;\r\n    }\r\n\r\n    /* Three Lines Per Row Layout */\r\n    .form-container .row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .form-container .row .column {\r\n      width: 31%;\r\n    }\r\n\r\n    .form-container .row .column.two-cols {\r\n      width: 48%;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"form-container\">\r\n    <form (ngSubmit)=\"onSubmit()\" action=\"/submit-user\" >\r\n\r\n      <!-- First Row -->\r\n      <div class=\"row\">\r\n        <!-- Left Column -->\r\n        <div class=\"column\">\r\n          <div>\r\n            <label for=\"userName\">Username:</label>\r\n            <input type=\"text\" id=\"userName\" [(ngModel)]=\"user.userName\" name=\"userName\" pattern=\"[A-Za-z ]{3,20}\" title=\"Username must be letters only, with spaces allowed, and between 3 to 20 characters long.\" required>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Middle Column -->\r\n        <div class=\"column\">\r\n          <div class=\"row\">\r\n            <div class=\"column two-cols\">\r\n              <label for=\"active\">Active:</label>\r\n              <input type=\"checkbox\" id=\"active\" [(ngModel)]=\"user.active\" name=\"active\" checked>\r\n            </div>\r\n\r\n            <div class=\"column two-cols\">\r\n              <label for=\"recycleBin\">Recycle Bin:</label>\r\n              <input type=\"checkbox\" id=\"recycleBin\" [(ngModel)]=\"user.recycleBin\" name=\"recycleBin\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"column two-cols\">\r\n              <label for=\"activeUntil\">Active Until:</label>\r\n              <input type=\"date\" id=\"activeUntil\" [(ngModel)]=\"user.activeUntil\"name=\"activeUntil\">\r\n            </div>\r\n\r\n            <div class=\"column two-cols\">\r\n              <label for=\"dateCreation\">Date Creation:</label>\r\n              <input type=\"date\" id=\"dateCreation\" [(ngModel)]=\"user.dateCreation\"name=\"dateCreation\" required>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Right Column -->\r\n        <div class=\"column\">\r\n          <div>\r\n            <label for=\"mobile\">Mobile:</label>\r\n            <input type=\"text\" id=\"mobile\" [(ngModel)]=\"user.mobile\" name=\"mobile\">\r\n          </div>\r\n          <div>\r\n            <label for=\"roleId\">RoleID:</label>\r\n            <input type=\"text\" id=\"roleId\" [(ngModel)]=\"user.roleId\" name=\"roleId\">\r\n          </div>\r\n          <div>\r\n            <label for=\"role\">Role:</label>\r\n            <select id=\"role\" name=\"role\" required>\r\n              <option value=\"\">Select Role</option>\r\n              <option value=\"1\">Admin</option>\r\n              <option value=\"2\">Medecin</option>\r\n              <option value=\"3\">Infirmier</option>\r\n              <option value=\"4\">Pharmacien</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Second Row (Nom, Prenom, Email in one line) -->\r\n      <div class=\"row\">\r\n        <div class=\"column\">\r\n          <label for=\"nom\">Nom:</label>\r\n          <input type=\"text\" id=\"nom\" [(ngModel)]=\"user.nom\"name=\"nom\" required>\r\n        </div>\r\n        <div class=\"column\">\r\n          <label for=\"prenom\">Prénom:</label>\r\n          <input type=\"text\" id=\"prenom\" [(ngModel)]=\"user.prenom\"name=\"prenom\" required>\r\n        </div>\r\n        <div class=\"column\">\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\">\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Third Row (Submit Button) -->\r\n      <div class=\"row\">\r\n        <div class=\"column\" style=\"width: 100%; text-align: center;\"> <!-- Adjusted width and centered text-align -->\r\n            <div class=\"submit-row\">\r\n            <input type=\"submit\" value=\"Submit\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</body>\r\n</html>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}