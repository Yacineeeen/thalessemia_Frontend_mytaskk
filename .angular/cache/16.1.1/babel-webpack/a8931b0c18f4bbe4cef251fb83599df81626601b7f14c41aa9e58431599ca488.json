{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/irmfoie.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateirmfComponent {\n  constructor(IrmfoieService, router, route) {\n    this.IrmfoieService = IrmfoieService;\n    this.router = router;\n    this.route = route;\n    this.IrmFoie = {};\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const PatientID = params.get('PatientID');\n      if (PatientID) {\n        const id = parseInt(PatientID, 10);\n        if (!isNaN(id)) {\n          this.getIrmCoeurById(id);\n        } else {\n          console.error('Invalid patient ID:', PatientID);\n        }\n      } else {\n        console.error('Patient ID is missing in route');\n      }\n    });\n  }\n  getIrmCoeurById(PatientID) {\n    this.IrmfoieService.getIrmCoeurById(PatientID).subscribe(data => {\n      this.IrmFoie = data;\n      // Optionally log the data to ensure it's correctly set\n      console.log('Formatted data:', this.IrmFoie);\n      this.IrmFoie.dateIrm = this.formatDate(this.IrmFoie.dateIrm);\n      console.log(\"testt date \");\n      console.log(this.IrmFoie.dateIrm);\n    }, error => {\n      this.errorMessage = error.message;\n      console.error('Error fetching complication data:', error);\n    });\n  }\n  formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n    const year = date.getFullYear();\n    return `${year}-${month}-${day}`;\n  }\n  onSubmit() {\n    const patientID = parseInt(this.route.snapshot.paramMap.get('PatientID'), 10);\n    if (!isNaN(patientID)) {\n      this.IrmfoieService.updateIrmcoeurByPatientId(patientID, this.IrmFoie).subscribe(response => {\n        console.log('Update successful', response);\n        //this.router.navigate(['/']); // Adjust this to your desired route after successful update\n      }, error => {\n        this.errorMessage = error.message;\n        console.error('Error updating complication data:', error);\n      });\n    } else {\n      console.error('Invalid patient ID:', patientID);\n    }\n  }\n}\nUpdateirmfComponent.ɵfac = function UpdateirmfComponent_Factory(t) {\n  return new (t || UpdateirmfComponent)(i0.ɵɵdirectiveInject(i1.IrmfoieService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateirmfComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateirmfComponent,\n  selectors: [[\"app-updateirmf\"]],\n  decls: 34,\n  vars: 5,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"form-container\"], [3, \"ngSubmit\"], [\"for\", \"patientId\"], [\"type\", \"text\", \"id\", \"patientId\", \"name\", \"PatientId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateirm\"], [\"type\", \"date\", \"id\", \"dateirm\", \"name\", \"dateirm\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Ft2\"], [\"type\", \"number\", \"id\", \"Ft2\", \"name\", \"Ft2\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ConcentrationHepatiqueFer\"], [\"type\", \"number\", \"id\", \"ConcentrationHepatiqueFer\", \"name\", \"ConcentrationHepatiqueFer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Fr2\"], [\"type\", \"number\", \"id\", \"Fr2\", \"name\", \"Fr2\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"submit-row\"], [\"type\", \"submit\", \"value\", \"Submit\"]],\n  template: function UpdateirmfComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateirmfComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"h1\");\n      i0.ɵɵtext(8, \"Complication Foie\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"h2\");\n      i0.ɵɵtext(11, \"Irm Foie:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Patient ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateirmfComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.IrmFoie.PatientId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\")(17, \"label\", 7);\n      i0.ɵɵtext(18, \"Date Irm:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateirmfComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.IrmFoie.DateIrm = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\")(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Ft2:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateirmfComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.IrmFoie.Ft2 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\")(25, \"label\", 11);\n      i0.ɵɵtext(26, \"Concentration Myocardiaque:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateirmfComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.IrmFoie.ConcentrationHepatiqueFer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\")(29, \"label\", 13);\n      i0.ɵɵtext(30, \"Fr2:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateirmfComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.IrmFoie.Fr2 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 15);\n      i0.ɵɵelement(33, \"input\", 16);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.IrmFoie.PatientId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.IrmFoie.DateIrm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.IrmFoie.Ft2);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.IrmFoie.ConcentrationHepatiqueFer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.IrmFoie.Fr2);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".form-container[_ngcontent-%COMP%] {\\n      max-width: 1200px;\\n      margin: 0 auto;\\n      padding: 20px;\\n      background-color: #f0f0f0;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n      text-align: center;\\n      font-size: 36px;\\n      font-weight: bold;\\n      color: #2c3e50;\\n      margin-bottom: 30px;\\n      font-family: 'Arial', sans-serif;\\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\\n      border-bottom: 3px solid #3498db;\\n      padding-bottom: 10px;\\n      display: inline-block;\\n    }\\n    .form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      text-align: center;\\n      font-size: 30px;\\n      font-weight: bold;\\n      color: #c95355;\\n      margin-bottom: 30px;\\n      font-family: 'Arial', sans-serif;\\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\\n      border-bottom: 3px solid #f12349;\\n      padding-bottom: 10px;\\n      display: inline-block;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n      background-color: #f9f9f9;\\n      padding: 20px;\\n      border-radius: 10px;\\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n      margin-bottom: 15px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 5px;\\n      font-weight: bold;\\n      text-transform: capitalize;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 10px;\\n      margin: 8px 0;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-row[_ngcontent-%COMP%] {\\n      text-align: center;\\n      margin-top: 20px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n      background-color: #000 !important;\\n      color: #fff !important;\\n      padding: 12px 20px;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n      transition: background-color 0.3s ease;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n      background-color: #444;\\n      color: #fff;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 10px;\\n      margin: 8px 0;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n      background-color: #fff;\\n      font-size: 16px;\\n      cursor: pointer;\\n      appearance: none;\\n      -webkit-appearance: none;\\n      -moz-appearance: none;\\n      background-image: url('data:image/svg+xml;utf8,<svg fill=\\\"currentColor\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 16 16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M7.68 11.895a.75.75 0 0 1-1.06-1.06L7.94 9.44V5.75a.75.75 0 0 1 1.5 0v3.69l1.32 1.33a.75.75 0 0 1-1.06 1.06L8 10.56l-.32.32z\\\"/></svg>');\\n      background-repeat: no-repeat;\\n      background-position: right 10px top 50%, 0 0;\\n      background-size: 16px auto, 100%;\\n    }\\n\\n    \\n\\n    .radio-group[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 15px;\\n    }\\n\\n    .radio-group[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n      margin-right: 5px;\\n    }\\n\\n    .radio-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      margin: 0;\\n    }\"]\n});","map":{"version":3,"names":["UpdateirmfComponent","constructor","IrmfoieService","router","route","IrmFoie","errorMessage","ngOnInit","paramMap","subscribe","params","PatientID","get","id","parseInt","isNaN","getIrmCoeurById","console","error","data","log","dateIrm","formatDate","message","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","onSubmit","patientID","snapshot","updateIrmcoeurByPatientId","response","i0","ɵɵdirectiveInject","i1","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","UpdateirmfComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","UpdateirmfComponent_Template_form_ngSubmit_6_listener","ɵɵtext","UpdateirmfComponent_Template_input_ngModelChange_15_listener","$event","PatientId","UpdateirmfComponent_Template_input_ngModelChange_19_listener","DateIrm","UpdateirmfComponent_Template_input_ngModelChange_23_listener","Ft2","UpdateirmfComponent_Template_input_ngModelChange_27_listener","ConcentrationHepatiqueFer","UpdateirmfComponent_Template_input_ngModelChange_31_listener","Fr2","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\updateirmf\\updateirmf.component.ts","C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\updateirmf\\updateirmf.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IrmFoie } from 'src/app/models/IrmFoie';\r\nimport { IrmfoieService } from 'src/app/services/irmfoie.service';\r\n\r\n@Component({\r\n  selector: 'app-updateirmf',\r\n  templateUrl: './updateirmf.component.html',\r\n  styleUrls: ['./updateirmf.component.css']\r\n})\r\nexport class UpdateirmfComponent {\r\n\r\n  IrmFoie: any= {};\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private IrmfoieService: IrmfoieService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const PatientID = params.get('PatientID');\r\n      if (PatientID) {\r\n        const id = parseInt(PatientID, 10);\r\n        if (!isNaN(id)) {\r\n          this.getIrmCoeurById(id);\r\n        } else {\r\n          console.error('Invalid patient ID:', PatientID);\r\n        }\r\n      } else {\r\n        console.error('Patient ID is missing in route');\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  private getIrmCoeurById(PatientID: number) {\r\n    this.IrmfoieService.getIrmCoeurById(PatientID).subscribe(\r\n      (data: IrmFoie) => {\r\n        this.IrmFoie = data;\r\n        // Optionally log the data to ensure it's correctly set\r\n        console.log('Formatted data:', this.IrmFoie);\r\n        this.IrmFoie.dateIrm = this.formatDate(this.IrmFoie.dateIrm);\r\n      console.log(\"testt date \");\r\n       console.log(this.IrmFoie.dateIrm);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.errorMessage = error.message;\r\n        console.error('Error fetching complication data:', error);\r\n      }\r\n    );\r\n  }\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const year = date.getFullYear();\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n  \r\n  \r\n\r\n  onSubmit() {\r\n    const patientID = parseInt(this.route.snapshot.paramMap.get('PatientID')!, 10);\r\n    if (!isNaN(patientID)) {\r\n        this.IrmfoieService.updateIrmcoeurByPatientId(patientID, this.IrmFoie).subscribe(\r\n            response => {\r\n                console.log('Update successful', response);\r\n                //this.router.navigate(['/']); // Adjust this to your desired route after successful update\r\n            },\r\n            (error: HttpErrorResponse) => {\r\n                this.errorMessage = error.message;\r\n                console.error('Error updating complication data:', error);\r\n            }\r\n        );\r\n    } else {\r\n        console.error('Invalid patient ID:', patientID);\r\n    }\r\n}\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <style>\r\n  \r\n  .form-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      background-color: #f0f0f0;\r\n    }\r\n\r\n    .form-container h1 {\r\n      text-align: center;\r\n      font-size: 36px;\r\n      font-weight: bold;\r\n      color: #2c3e50;\r\n      margin-bottom: 30px;\r\n      font-family: 'Arial', sans-serif;\r\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\r\n      border-bottom: 3px solid #3498db;\r\n      padding-bottom: 10px;\r\n      display: inline-block;\r\n    }\r\n    .form-container h2 {\r\n      text-align: center;\r\n      font-size: 30px;\r\n      font-weight: bold;\r\n      color: #c95355;\r\n      margin-bottom: 30px;\r\n      font-family: 'Arial', sans-serif;\r\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\r\n      border-bottom: 3px solid #f12349;\r\n      padding-bottom: 10px;\r\n      display: inline-block;\r\n    }\r\n\r\n    .form-container form {\r\n      background-color: #f9f9f9;\r\n      padding: 20px;\r\n      border-radius: 10px;\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .form-container form div {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .form-container form label {\r\n      display: block;\r\n      margin-bottom: 5px;\r\n      font-weight: bold;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .form-container form input,\r\n    .form-container form select {\r\n      width: 100%;\r\n      padding: 10px;\r\n      margin: 8px 0;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .form-container form .submit-row {\r\n      text-align: center;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .form-container form input[type=\"submit\"] {\r\n      background-color: #000 !important;\r\n      color: #fff !important;\r\n      padding: 12px 20px;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .form-container form input[type=\"submit\"]:hover {\r\n      background-color: #444;\r\n      color: #fff;\r\n    }\r\n\r\n    .form-container form select {\r\n      width: 100%;\r\n      padding: 10px;\r\n      margin: 8px 0;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      background-color: #fff;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      appearance: none;\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      background-image: url('data:image/svg+xml;utf8,<svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M7.68 11.895a.75.75 0 0 1-1.06-1.06L7.94 9.44V5.75a.75.75 0 0 1 1.5 0v3.69l1.32 1.33a.75.75 0 0 1-1.06 1.06L8 10.56l-.32.32z\"/></svg>');\r\n      background-repeat: no-repeat;\r\n      background-position: right 10px top 50%, 0 0;\r\n      background-size: 16px auto, 100%;\r\n    }\r\n\r\n    /* Style for CNAM radio buttons */\r\n    .radio-group {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n    }\r\n\r\n    .radio-group input[type=\"radio\"] {\r\n      margin-right: 5px;\r\n    }\r\n\r\n    .radio-group label {\r\n      margin: 0;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"form-container\">\r\n    <form (ngSubmit)=\"onSubmit()\" >\r\n     \r\n      <h1>Complication Foie</h1>\r\n        <br>\r\n      <h2>Irm Foie:</h2>\r\n       \r\n      <!-- Patient ID -->\r\n      <div>\r\n        <label for=\"patientId\">Patient ID:</label>\r\n        <input type=\"text\" id=\"patientId\" [(ngModel)]=\"IrmFoie.PatientId\" name=\"PatientId\" required>\r\n      </div>\r\n\r\n        <!-- Date Irm -->\r\n        <div>\r\n            <label for=\"dateirm\">Date Irm:</label>\r\n            <input type=\"date\" id=\"dateirm\" [(ngModel)]=\"IrmFoie.DateIrm\" name=\"dateirm\" required>\r\n          </div>\r\n      \r\n\r\n           <!-- Ct2 -->\r\n        <div>\r\n            <label for=\"Ft2\">Ft2:</label>\r\n            <input type=\"number\" id=\"Ft2\" [(ngModel)]=\"IrmFoie.Ft2\" name=\"Ft2\" required>\r\n          </div>\r\n          <!-- ConcentrationMyocardiaque -->\r\n        <div>\r\n            <label for=\"ConcentrationHepatiqueFer\">Concentration Myocardiaque:</label>\r\n            <input type=\"number\" id=\"ConcentrationHepatiqueFer\" [(ngModel)]=\"IrmFoie.ConcentrationHepatiqueFer\" name=\"ConcentrationHepatiqueFer\" required>\r\n          </div>\r\n          <!-- Cr2 -->\r\n        <div>\r\n            <label for=\"Fr2\">Fr2:</label>\r\n            <input type=\"number\" id=\"Fr2\" [(ngModel)]=\"IrmFoie.Fr2\" name=\"Fr2\" required>\r\n          </div>\r\n      \r\n      <!-- Submit -->\r\n      <div class=\"submit-row\">\r\n        <input type=\"submit\" value=\"Submit\">\r\n      </div>\r\n    </form>\r\n  </div>\r\n</body>\r\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}