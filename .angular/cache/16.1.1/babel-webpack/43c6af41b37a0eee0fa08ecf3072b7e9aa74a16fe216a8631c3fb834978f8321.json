{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ComplicationCoeur } from '../models/complication-coeur.model';\nexport let ComplicationCoeurComponent = class ComplicationCoeurComponent {\n  constructor(complicationCoeurService) {\n    this.complicationCoeurService = complicationCoeurService;\n    this.ComplicationCoeur = new ComplicationCoeur();\n    this.errorMessage = null;\n  }\n  ngOnInit() {}\n  onPatientIdChange() {\n    if (this.ComplicationCoeur.PatientId) {\n      this.fetchPatientData(this.ComplicationCoeur.PatientId);\n    }\n  }\n  fetchPatientData(patientId) {\n    this.complicationCoeurService.getComplicationCoeurByPatientId(patientId).subscribe(data => {\n      this.ComplicationCoeur = data;\n      this.errorMessage = null;\n    }, error => {\n      this.errorMessage = 'Failed to fetch data';\n      console.error(error);\n    });\n  }\n  onSubmit() {\n    this.complicationCoeurService.saveComplicationCoeur(this.ComplicationCoeur).subscribe(() => {\n      this.errorMessage = null;\n      alert('Data saved successfully');\n    }, error => {\n      this.errorMessage = 'Failed to save data';\n      console.error(error);\n    });\n  }\n};\nComplicationCoeurComponent = __decorate([Component({\n  selector: 'app-complication-coeur',\n  templateUrl: './complication-coeur.component.html',\n  styleUrls: ['./complication-coeur.component.css']\n})], ComplicationCoeurComponent);","map":{"version":3,"names":["Component","ComplicationCoeur","ComplicationCoeurComponent","constructor","complicationCoeurService","errorMessage","ngOnInit","onPatientIdChange","PatientId","fetchPatientData","patientId","getComplicationCoeurByPatientId","subscribe","data","error","console","onSubmit","saveComplicationCoeur","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\complicationcoeur-update\\complicationcoeur-update.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ComplicationCoeurService } from '../services/complication-coeur.service';\r\nimport { ComplicationCoeur } from '../models/complication-coeur.model';\r\n\r\n@Component({\r\n  selector: 'app-complication-coeur',\r\n  templateUrl: './complication-coeur.component.html',\r\n  styleUrls: ['./complication-coeur.component.css']\r\n})\r\nexport class ComplicationCoeurComponent implements OnInit {\r\n  ComplicationCoeur: ComplicationCoeur = new ComplicationCoeur();\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(private complicationCoeurService: ComplicationCoeurService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onPatientIdChange(): void {\r\n    if (this.ComplicationCoeur.PatientId) {\r\n      this.fetchPatientData(this.ComplicationCoeur.PatientId);\r\n    }\r\n  }\r\n\r\n  fetchPatientData(patientId: number): void {\r\n    this.complicationCoeurService.getComplicationCoeurByPatientId(patientId).subscribe(\r\n      (data: ComplicationCoeur) => {\r\n        this.ComplicationCoeur = data;\r\n        this.errorMessage = null;\r\n      },\r\n      (error) => {\r\n        this.errorMessage = 'Failed to fetch data';\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.complicationCoeurService.saveComplicationCoeur(this.ComplicationCoeur).subscribe(\r\n      () => {\r\n        this.errorMessage = null;\r\n        alert('Data saved successfully');\r\n      },\r\n      (error) => {\r\n        this.errorMessage = 'Failed to save data';\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,iBAAiB,QAAQ,oCAAoC;AAO/D,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAIrCC,YAAoBC,wBAAkD;IAAlD,KAAAA,wBAAwB,GAAxBA,wBAAwB;IAH5C,KAAAH,iBAAiB,GAAsB,IAAIA,iBAAiB,EAAE;IAC9D,KAAAI,YAAY,GAAkB,IAAI;EAEuC;EAEzEC,QAAQA,CAAA,GAAU;EAElBC,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACN,iBAAiB,CAACO,SAAS,EAAE;MACpC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACR,iBAAiB,CAACO,SAAS,CAAC;;EAE3D;EAEAC,gBAAgBA,CAACC,SAAiB;IAChC,IAAI,CAACN,wBAAwB,CAACO,+BAA+B,CAACD,SAAS,CAAC,CAACE,SAAS,CAC/EC,IAAuB,IAAI;MAC1B,IAAI,CAACZ,iBAAiB,GAAGY,IAAI;MAC7B,IAAI,CAACR,YAAY,GAAG,IAAI;IAC1B,CAAC,EACAS,KAAK,IAAI;MACR,IAAI,CAACT,YAAY,GAAG,sBAAsB;MAC1CU,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACZ,wBAAwB,CAACa,qBAAqB,CAAC,IAAI,CAAChB,iBAAiB,CAAC,CAACW,SAAS,CACnF,MAAK;MACH,IAAI,CAACP,YAAY,GAAG,IAAI;MACxBa,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,EACAJ,KAAK,IAAI;MACR,IAAI,CAACT,YAAY,GAAG,qBAAqB;MACzCU,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;CACD;AAvCYZ,0BAA0B,GAAAiB,UAAA,EALtCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACWpB,0BAA0B,CAuCtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}