{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CompfoieService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7129/api/ComplicationFoies';\n  }\n  addFoie(ComplicationFoie) {\n    console.log('Creating it with data:', ComplicationFoie);\n    return this.http.post(`${this.apiUrl}/addFoie`, ComplicationFoie, {\n      observe: 'response'\n    });\n  }\n  getComplicationFoieById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  update(id, ComplicationFoie) {\n    return this.http.put(`${this.apiUrl}/update/${id}`, ComplicationFoie, {\n      observe: 'response'\n    });\n  }\n}\nCompfoieService.ɵfac = function CompfoieService_Factory(t) {\n  return new (t || CompfoieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCompfoieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CompfoieService,\n  factory: CompfoieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CompfoieService","constructor","http","apiUrl","addFoie","ComplicationFoie","console","log","post","observe","getComplicationFoieById","id","get","update","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\services\\compfoie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ComplicationFoie } from '../models/ComplicationFoie';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompfoieService {\r\n\r\n  private apiUrl = 'https://localhost:7129/api/ComplicationFoies';\r\n\r\n  constructor(private http: HttpClient) { }\r\n  addFoie(ComplicationFoie: ComplicationFoie): Observable<HttpResponse<any>> {\r\n    console.log('Creating it with data:', ComplicationFoie);\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/addFoie`, ComplicationFoie, { observe: 'response' });\r\n  }\r\n  getComplicationFoieById(id: number): Observable<ComplicationFoie> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  update(id: number, ComplicationFoie: ComplicationFoie): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/update/${id}`, ComplicationFoie, { observe: 'response' });\r\n}\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,8CAA8C;EAEvB;EACxCC,OAAOA,CAACC,gBAAkC;IACxCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,gBAAgB,CAAC;IAEvD,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,UAAU,EAAEE,gBAAgB,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EACjG;EACAC,uBAAuBA,CAACC,EAAU;IAChC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACnD;EAEAE,MAAMA,CAACF,EAAU,EAAEN,gBAAkC;IACnD,OAAO,IAAI,CAACH,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,MAAM,WAAWQ,EAAE,EAAE,EAAEN,gBAAgB,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EAClG;;AAhBaT,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}