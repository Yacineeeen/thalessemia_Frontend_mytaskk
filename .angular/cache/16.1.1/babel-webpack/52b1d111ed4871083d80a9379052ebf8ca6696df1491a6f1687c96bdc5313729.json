{"ast":null,"code":"import { User } from 'src/app/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/userback.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction StatusComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1.roleId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r1.roleDescription);\n  }\n}\nexport class StatusComponent {\n  constructor(userbackService) {\n    this.userbackService = userbackService;\n    this.user = new User();\n    this.role = [];\n  }\n  formatDateToYYYYMMDD(date) {\n    return date.toISOString().split('T')[0];\n  }\n  loadRole() {\n    this.userbackService.GetRole().subscribe(data => {\n      this.role = data;\n      console.log('Role:', this.role); // Check the output here\n    }, error => {\n      console.error('Error fetching role:', error);\n    });\n  }\n  ngOnInit() {\n    this.loadRole();\n  }\n  onSubmit() {\n    const now = new Date();\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now); // Format `yyyy-MM-dd`\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\n    if (this.user.activeUntil) {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\n    } else {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\n    }\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\n    const userToSend = {\n      ...this.user,\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\n      activeUntil: new Date(this.user.activeUntil).toISOString()\n    };\n    this.userbackService.addUser(userToSend).subscribe(response => {\n      if (response.status === 200 || response.status === 201) {\n        console.log('User added successfully', response);\n      } else {\n        console.error('Unexpected response status', response.status);\n      }\n    }, error => {\n      console.error('Error adding user', error);\n    });\n  }\n}\nStatusComponent.ɵfac = function StatusComponent_Factory(t) {\n  return new (t || StatusComponent)(i0.ɵɵdirectiveInject(i1.UserbackService));\n};\nStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StatusComponent,\n  selectors: [[\"app-status\"]],\n  decls: 56,\n  vars: 12,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"form-container\"], [\"action\", \"/submit-user\", 3, \"ngSubmit\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"pattern\", \"[A-Za-z ]{3,20}\", \"title\", \"Username must be letters only, with spaces allowed, and between 3 to 20 characters long.\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"active\"], [\"type\", \"checkbox\", \"id\", \"active\", \"name\", \"active\", \"checked\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"recycleBin\"], [\"type\", \"checkbox\", \"id\", \"recycleBin\", \"name\", \"recycleBin\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"activeUntil\"], [\"type\", \"date\", \"id\", \"activeUntil\", \"name\", \"activeUntil\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateCreation\"], [\"type\", \"date\", \"id\", \"dateCreation\", \"name\", \"dateCreation\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"mobile\"], [\"type\", \"text\", \"id\", \"mobile\", \"name\", \"mobile\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"roleId\"], [\"id\", \"roleId\", \"name\", \"roleId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"name\", \"prenom\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"submit-row\"], [\"type\", \"submit\", \"value\", \"Submit\"], [3, \"value\"]],\n  template: function StatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"User Form\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"body\")(7, \"div\", 3)(8, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function StatusComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Nom d'utilisateur:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.user.userName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Mot de passe:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Actif:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.user.active = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"label\", 11);\n      i0.ɵɵtext(23, \"Recycle Bin:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.user.recycleBin = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\")(26, \"label\", 13);\n      i0.ɵɵtext(27, \"Actif jusqu'\\u00E0:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.user.activeUntil = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"label\", 15);\n      i0.ɵɵtext(31, \"Date de Cr\\u00E9ation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.user.dateCreation = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\")(34, \"label\", 17);\n      i0.ɵɵtext(35, \"T\\u00E9l\\u00E9phone:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.user.mobile = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\")(38, \"label\", 19);\n      i0.ɵɵtext(39, \"Role:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"select\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_select_ngModelChange_40_listener($event) {\n        return ctx.user.roleId = $event;\n      });\n      i0.ɵɵtemplate(41, StatusComponent_option_41_Template, 2, 2, \"option\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\")(43, \"label\", 22);\n      i0.ɵɵtext(44, \"Nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_45_listener($event) {\n        return ctx.user.nom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\")(47, \"label\", 24);\n      i0.ɵɵtext(48, \"Pr\\u00E9nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 25);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_49_listener($event) {\n        return ctx.user.prenom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\")(51, \"label\", 26);\n      i0.ɵɵtext(52, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"input\", 27);\n      i0.ɵɵlistener(\"ngModelChange\", function StatusComponent_Template_input_ngModelChange_53_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 28);\n      i0.ɵɵelement(55, \"input\", 29);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.userName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.active);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.recycleBin);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.activeUntil);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.dateCreation);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.mobile);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.roleId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.role);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.nom);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.prenom);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"\\n\\n    .form-container[_ngcontent-%COMP%] {\\n      max-width: 600px;\\n      margin: 0 auto;\\n      padding: 20px;\\n      background-color: #f0f0f0;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n      background-color: #f9f9f9;\\n      padding: 20px;\\n      border-radius: 10px;\\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n      margin-bottom: 15px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 5px;\\n      font-weight: bold;\\n      text-transform: capitalize; \\n\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 10px;\\n      margin: 8px 0;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-row[_ngcontent-%COMP%] {\\n      text-align: center; \\n\\n      margin-top: 20px;\\n    }\\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n      background-color: #000 !important;\\n      color: #fff !important;\\n      padding: 12px 20px;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n      transition: background-color 0.3s ease;\\n    }\\n\\n    \\n\\n    .form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n      background-color: #333;\\n    }\"]\n});","map":{"version":3,"names":["User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r1","roleId","ɵɵadvance","ɵɵtextInterpolate","roleDescription","StatusComponent","constructor","userbackService","user","role","formatDateToYYYYMMDD","date","toISOString","split","loadRole","GetRole","subscribe","data","console","log","error","ngOnInit","onSubmit","now","Date","dateCreation","activeUntil","userToSend","addUser","response","status","ɵɵdirectiveInject","i1","UserbackService","selectors","decls","vars","consts","template","StatusComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","StatusComponent_Template_form_ngSubmit_8_listener","StatusComponent_Template_input_ngModelChange_12_listener","$event","userName","StatusComponent_Template_input_ngModelChange_16_listener","password","StatusComponent_Template_input_ngModelChange_20_listener","active","StatusComponent_Template_input_ngModelChange_24_listener","recycleBin","StatusComponent_Template_input_ngModelChange_28_listener","StatusComponent_Template_input_ngModelChange_32_listener","StatusComponent_Template_input_ngModelChange_36_listener","mobile","StatusComponent_Template_select_ngModelChange_40_listener","ɵɵtemplate","StatusComponent_option_41_Template","StatusComponent_Template_input_ngModelChange_45_listener","nom","StatusComponent_Template_input_ngModelChange_49_listener","prenom","StatusComponent_Template_input_ngModelChange_53_listener","email"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\status\\status.component.ts","C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\status\\status.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/User';\r\nimport { UserbackService } from 'src/app/services/userback.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Role } from 'src/app/models/Role';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent implements OnInit{\r\n  user: User = new User();\r\n  role: Role[] = [];\r\n\r\n  constructor(private userbackService: UserbackService) { }\r\n\r\n  private formatDateToYYYYMMDD(date: Date): string {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n  loadRole() {\r\n    this.userbackService.GetRole().subscribe(\r\n      data => {\r\n        this.role = data;\r\n        console.log('Role:', this.role); // Check the output here\r\n      },\r\n      error => {\r\n        console.error('Error fetching role:', error);\r\n      }\r\n    );\r\n  }\r\n  ngOnInit()\r\n  {\r\n    this.loadRole();\r\n  }\r\n\r\n  onSubmit() {\r\n    const now = new Date();\r\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now);  // Format `yyyy-MM-dd`\r\n  \r\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\r\n    if (this.user.activeUntil) {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\r\n    } else {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\r\n    }\r\n  \r\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\r\n    const userToSend = {\r\n      ...this.user,\r\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\r\n      activeUntil: new Date(this.user.activeUntil).toISOString()\r\n    };\r\n  \r\n    this.userbackService.addUser(userToSend).subscribe(\r\n      (response: HttpResponse<any>) => {\r\n        if (response.status === 200 || response.status === 201) {\r\n          console.log('User added successfully', response);\r\n        } else {\r\n          console.error('Unexpected response status', response.status);\r\n        }\r\n      },\r\n      error => {\r\n        console.error('Error adding user', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>User Form</title>\r\n  <style>\r\n    /* Form Container */\r\n    .form-container {\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n      background-color: #f0f0f0;\r\n    }\r\n\r\n    /* Form Style */\r\n    .form-container form {\r\n      background-color: #f9f9f9;\r\n      padding: 20px;\r\n      border-radius: 10px;\r\n      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    /* Form Input Fields */\r\n    .form-container form div {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .form-container form label {\r\n      display: block;\r\n      margin-bottom: 5px;\r\n      font-weight: bold;\r\n      text-transform: capitalize; /* Convert label text to title case */\r\n    }\r\n\r\n    .form-container form input,\r\n    .form-container form select {\r\n      width: 100%;\r\n      padding: 10px;\r\n      margin: 8px 0;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .form-container form .submit-row {\r\n      text-align: center; /* Center content horizontally */\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .form-container form input[type=\"submit\"] {\r\n      background-color: #000 !important;\r\n      color: #fff !important;\r\n      padding: 12px 20px;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    /* Form Submit Button Hover Effect */\r\n    .form-container form input[type=\"submit\"]:hover {\r\n      background-color: #333;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"form-container\">\r\n    <form (ngSubmit)=\"onSubmit()\" action=\"/submit-user\">\r\n\r\n      <div>\r\n        <label for=\"userName\">Nom d'utilisateur:</label>\r\n        <input type=\"text\" id=\"userName\" [(ngModel)]=\"user.userName\" name=\"userName\" pattern=\"[A-Za-z ]{3,20}\" title=\"Username must be letters only, with spaces allowed, and between 3 to 20 characters long.\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password\">Mot de passe:</label>\r\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"active\">Actif:</label>\r\n        <input type=\"checkbox\" id=\"active\" [(ngModel)]=\"user.active\" name=\"active\" checked>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"recycleBin\">Recycle Bin:</label>\r\n        <input type=\"checkbox\" id=\"recycleBin\" [(ngModel)]=\"user.recycleBin\" name=\"recycleBin\">\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"activeUntil\">Actif jusqu'à:</label>\r\n        <input type=\"date\" id=\"activeUntil\" [(ngModel)]=\"user.activeUntil\" name=\"activeUntil\">\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"dateCreation\">Date de Création:</label>\r\n        <input type=\"date\" id=\"dateCreation\" [(ngModel)]=\"user.dateCreation\" name=\"dateCreation\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"mobile\">Téléphone:</label>\r\n        <input type=\"text\" id=\"mobile\" [(ngModel)]=\"user.mobile\" name=\"mobile\">\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"roleId\">Role:</label>\r\n        <select id=\"roleId\" [(ngModel)]=\"user.roleId\" name=\"roleId\" required>\r\n          <option *ngFor=\"let role of role\" [value]=\"role.roleId\">{{ role.roleDescription }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"nom\">Nom:</label>\r\n        <input type=\"text\" id=\"nom\" [(ngModel)]=\"user.nom\" name=\"nom\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"prenom\">Prénom:</label>\r\n        <input type=\"text\" id=\"prenom\" [(ngModel)]=\"user.prenom\" name=\"prenom\" required>\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\">\r\n      </div>\r\n\r\n      <div class=\"submit-row\">\r\n        <input type=\"submit\" value=\"Submit\">\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</body>\r\n</html>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}