{"ast":null,"code":"import { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { UserbackService } from 'src/app/services/userback.service';\nexport const authGuard = (route, state) => {\n  const userbackService = inject(UserbackService); // Injecting UserbackService to use its methods\n  const router = inject(Router); // Injecting Router to navigate if needed\n  if (userbackService.isLoggedIn()) {\n    return true; // Allow access if the user is logged in\n  } else {\n    router.navigate(['/login']); // Redirect to login page if not logged in\n    return false; // Block access if the user is not logged in\n  }\n};","map":{"version":3,"names":["Router","inject","UserbackService","authGuard","route","state","userbackService","router","isLoggedIn","navigate"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\auth.guard.ts"],"sourcesContent":["import { CanActivateFn ,Router} from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { UserbackService } from 'src/app/services/userback.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const userbackService = inject(UserbackService); // Injecting UserbackService to use its methods\r\n  const router = inject(Router); // Injecting Router to navigate if needed\r\n\r\n  if (userbackService.isLoggedIn()) {\r\n    return true; // Allow access if the user is logged in\r\n  } else {\r\n    router.navigate(['/login']); // Redirect to login page if not logged in\r\n    return false; // Block access if the user is not logged in\r\n  }\r\n};"],"mappings":"AAAA,SAAwBA,MAAM,QAAO,iBAAiB;AACtD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,eAAe,QAAQ,mCAAmC;AAEnE,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,eAAe,GAAGL,MAAM,CAACC,eAAe,CAAC,CAAC,CAAC;EACjD,MAAMK,MAAM,GAAGN,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;EAE/B,IAAIM,eAAe,CAACE,UAAU,EAAE,EAAE;IAChC,OAAO,IAAI,CAAC,CAAC;GACd,MAAM;IACLD,MAAM,CAACE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B,OAAO,KAAK,CAAC,CAAC;;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}