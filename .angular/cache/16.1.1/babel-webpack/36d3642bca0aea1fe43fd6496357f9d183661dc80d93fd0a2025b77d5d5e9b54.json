{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EvaluationRendement } from 'src/app/models/EvaluationRendement';\nexport let RendementComponent = class RendementComponent {\n  constructor(RendementService) {\n    this.RendementService = RendementService;\n    this.EvaluationRendement = new EvaluationRendement();\n    this.errorMessage = '';\n  }\n  onSubmit() {\n    this.RendementService.addev(this.EvaluationRendement).subscribe(response => {\n      console.log('Complication added successfully', response);\n      this.errorMessage = '';\n    }, error => {\n      console.error('Error adding Complication', error);\n      this.errorMessage = error.error.title;\n      if (error.error.errors) {\n        for (const [field, errors] of Object.entries(error.error.errors)) {\n          console.error(`Validation error for ${field}:`, errors);\n        }\n      }\n    });\n  }\n};\nRendementComponent = __decorate([Component({\n  selector: 'app-rendement',\n  templateUrl: './rendement.component.html',\n  styleUrls: ['./rendement.component.css']\n})], RendementComponent);","map":{"version":3,"names":["Component","EvaluationRendement","RendementComponent","constructor","RendementService","errorMessage","onSubmit","addev","subscribe","response","console","log","error","title","errors","field","Object","entries","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\rendement\\rendement.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { EvaluationRendement } from 'src/app/models/EvaluationRendement';\r\nimport { RendementService } from 'src/app/services/rendement.service';\r\n\r\n@Component({\r\n  selector: 'app-rendement',\r\n  templateUrl: './rendement.component.html',\r\n  styleUrls: ['./rendement.component.css']\r\n})\r\nexport class RendementComponent {\r\n\r\n  EvaluationRendement: EvaluationRendement = new EvaluationRendement();\r\n  errorMessage: string = '';\r\n\r\n  constructor(private RendementService: RendementService) {}\r\n \r\n\r\n  onSubmit() {  \r\n    this.RendementService.addev(this.EvaluationRendement).subscribe(\r\n      response => {\r\n        console.log('Complication added successfully', response);\r\n        this.errorMessage = '';\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.error('Error adding Complication', error);\r\n        this.errorMessage = error.error.title;\r\n        if (error.error.errors) {\r\n          for (const [field, errors] of Object.entries(error.error.errors)) {\r\n            console.error(`Validation error for ${field}:`, errors);\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,mBAAmB,QAAQ,oCAAoC;AAQjE,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAK7BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAHpC,KAAAH,mBAAmB,GAAwB,IAAIA,mBAAmB,EAAE;IACpE,KAAAI,YAAY,GAAW,EAAE;EAEgC;EAGzDC,QAAQA,CAAA;IACN,IAAI,CAACF,gBAAgB,CAACG,KAAK,CAAC,IAAI,CAACN,mBAAmB,CAAC,CAACO,SAAS,CAC7DC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,QAAQ,CAAC;MACxD,IAAI,CAACJ,YAAY,GAAG,EAAE;IACxB,CAAC,EACAO,KAAwB,IAAI;MAC3BF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,IAAI,CAACP,YAAY,GAAGO,KAAK,CAACA,KAAK,CAACC,KAAK;MACrC,IAAID,KAAK,CAACA,KAAK,CAACE,MAAM,EAAE;QACtB,KAAK,MAAM,CAACC,KAAK,EAAED,MAAM,CAAC,IAAIE,MAAM,CAACC,OAAO,CAACL,KAAK,CAACA,KAAK,CAACE,MAAM,CAAC,EAAE;UAChEJ,OAAO,CAACE,KAAK,CAAC,wBAAwBG,KAAK,GAAG,EAAED,MAAM,CAAC;;;IAG7D,CAAC,CACF;EACH;CAED;AA1BYZ,kBAAkB,GAAAgB,UAAA,EAL9BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWnB,kBAAkB,CA0B9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}