{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IrmcoeurService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7129/api/Irmcoeurs';\n  }\n  addIrm(IrmCoeur) {\n    console.log('Creating it with data:', IrmCoeur);\n    return this.http.post(`${this.apiUrl}/addIrm`, IrmCoeur, {\n      observe: 'response'\n    });\n  }\n  getIrmCoeurById(id) {\n    return this.http.get(`${this.apiUrl}/getbyid/${id}`);\n  }\n  getIrmCoeurById(id) {\n    return this.http.get(`${this.apiUrl}/getbyid/${id}`);\n  }\n  update(id, IrmCoeur) {\n    return this.http.put(`${this.apiUrl}/update/${id}`, IrmCoeur, {\n      observe: 'response'\n    });\n  }\n}\nIrmcoeurService.ɵfac = function IrmcoeurService_Factory(t) {\n  return new (t || IrmcoeurService)(i0.ɵɵinject(i1.HttpClient));\n};\nIrmcoeurService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IrmcoeurService,\n  factory: IrmcoeurService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["IrmcoeurService","constructor","http","apiUrl","addIrm","IrmCoeur","console","log","post","observe","getIrmCoeurById","id","get","update","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\services\\irmcoeur.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IrmCoeur } from '../models/IrmCoeur';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IrmcoeurService {\r\n\r\n  private apiUrl = 'https://localhost:7129/api/Irmcoeurs';\r\n\r\n  constructor(private http: HttpClient) { }\r\n  addIrm(IrmCoeur: IrmCoeur): Observable<HttpResponse<any>> {\r\n    console.log('Creating it with data:', IrmCoeur);\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/addIrm`, IrmCoeur, { observe: 'response' });\r\n  }\r\n\r\n  getIrmCoeurById(id: number): Observable<IrmCoeur> {\r\n    return this.http.get<any>(`${this.apiUrl}/getbyid/${id}`);\r\n  }\r\n  getIrmCoeurById(id: number): Observable<IrmCoeur> {\r\n    return this.http.get<IrmCoeur>(`${this.apiUrl}/getbyid/${id}`);\r\n  }\r\n\r\n  update(id: number, IrmCoeur: IrmCoeur): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/update/${id}`, IrmCoeur, { observe: 'response' });\r\n}\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sCAAsC;EAEf;EACxCC,MAAMA,CAACC,QAAkB;IACvBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;IAE/C,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,SAAS,EAAEE,QAAQ,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EACxF;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,YAAYQ,EAAE,EAAE,CAAC;EAC3D;EACAD,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,MAAM,YAAYQ,EAAE,EAAE,CAAC;EAChE;EAEAE,MAAMA,CAACF,EAAU,EAAEN,QAAkB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,MAAM,WAAWQ,EAAE,EAAE,EAAEN,QAAQ,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EAC1F;;AApBaT,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}