{"ast":null,"code":"import { ComplicationCoeur } from 'src/app/models/ComplicationCoeur';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/coeurservice.service\";\nimport * as i3 from \"@angular/forms\";\nexport class ComplicationcoeurUpdateComponent {\n  constructor(route, router, coeurService) {\n    this.route = route;\n    this.router = router;\n    this.coeurService = coeurService;\n    this.ComplicationCoeur = new ComplicationCoeur();\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.getComplicationCoeur(id);\n    }\n  }\n  getComplicationCoeur(id) {\n    this.coeurService.getComplicationCoeur(id).subscribe(response => {\n      this.ComplicationCoeur = response;\n    }, error => {\n      console.error('Error fetching ComplicationCoeur details', error);\n    });\n  }\n  onSubmit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.coeurService.updateComplicationCoeur(id, this.ComplicationCoeur).subscribe(response => {\n        this.router.navigate(['/some-success-route']);\n      }, error => {\n        console.error('Error updating ComplicationCoeur', error);\n        this.errorMessage = 'An error occurred while updating the ComplicationCoeur. Please try again.';\n      });\n    }\n  }\n}\nComplicationcoeurUpdateComponent.ɵfac = function ComplicationcoeurUpdateComponent_Factory(t) {\n  return new (t || ComplicationcoeurUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CoeurserviceService));\n};\nComplicationcoeurUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComplicationcoeurUpdateComponent,\n  selectors: [[\"app-complicationcoeur-update\"]],\n  decls: 10,\n  vars: 4,\n  consts: [[1, \"radio-buttons\"], [\"type\", \"radio\", \"id\", \"irmOui\", \"name\", \"IrmCardiaque\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"irmOui\"], [\"type\", \"radio\", \"id\", \"irmNon\", \"name\", \"IrmCardiaque\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"irmNon\"]],\n  template: function ComplicationcoeurUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n      i0.ɵɵtext(2, \"IRM T2* Cardique:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ComplicationcoeurUpdateComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.ComplicationCoeur.Irmcardiaque = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Oui\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ComplicationcoeurUpdateComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.ComplicationCoeur.Irmcardiaque = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Non\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ComplicationCoeur.Irmcardiaque)(\"value\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.ComplicationCoeur.Irmcardiaque)(\"value\", false);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ComplicationCoeur","ComplicationcoeurUpdateComponent","constructor","route","router","coeurService","errorMessage","ngOnInit","id","Number","snapshot","paramMap","get","getComplicationCoeur","subscribe","response","error","console","onSubmit","updateComplicationCoeur","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","CoeurserviceService","selectors","decls","vars","consts","template","ComplicationcoeurUpdateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ComplicationcoeurUpdateComponent_Template_input_ngModelChange_4_listener","$event","Irmcardiaque","ComplicationcoeurUpdateComponent_Template_input_ngModelChange_7_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\complicationcoeur-update\\complicationcoeur-update.component.ts","C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\complicationcoeur-update\\complicationcoeur-update.component.html"],"sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ComplicationCoeur } from 'src/app/models/ComplicationCoeur';\r\nimport { CoeurserviceService } from 'src/app/services/coeurservice.service';\r\n\r\n@Component({\r\n  selector: 'app-complicationcoeur-update',\r\n  templateUrl: './complicationcoeur-update.component.html',\r\n  styleUrls: ['./complicationcoeur-update.component.css']\r\n})\r\nexport class ComplicationcoeurUpdateComponent {\r\n  ComplicationCoeur: ComplicationCoeur = new ComplicationCoeur();\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private coeurService: CoeurserviceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (id) {\r\n      this.getComplicationCoeur(id);\r\n    }\r\n  }\r\n\r\n  getComplicationCoeur(id: number): void {\r\n    this.coeurService.getComplicationCoeur(id).subscribe(\r\n      (response: ComplicationCoeur) => {\r\n        this.ComplicationCoeur = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching ComplicationCoeur details', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (id) {\r\n      this.coeurService.updateComplicationCoeur(id, this.ComplicationCoeur).subscribe(\r\n        (response: HttpResponse<any>) => {\r\n          this.router.navigate(['/some-success-route']);\r\n        },\r\n        (error) => {\r\n          console.error('Error updating ComplicationCoeur', error);\r\n          this.errorMessage = 'An error occurred while updating the ComplicationCoeur. Please try again.';\r\n        }\r\n      );\r\n    }\r\n  }\r\n}","\r\n<div>\r\n  <label>IRM T2* Cardique:</label>\r\n  <div class=\"radio-buttons\">\r\n    <input type=\"radio\" id=\"irmOui\" [(ngModel)]=\"ComplicationCoeur.Irmcardiaque\" [value]=\"true\" name=\"IrmCardiaque\" >\r\n    <label for=\"irmOui\">Oui</label>\r\n    <input type=\"radio\" id=\"irmNon\" [(ngModel)]=\"ComplicationCoeur.Irmcardiaque\" [value]=\"false\" name=\"IrmCardiaque\" >\r\n    <label for=\"irmNon\">Non</label>\r\n  </div>\r\n</div>"],"mappings":"AAGA,SAASA,iBAAiB,QAAQ,kCAAkC;;;;;AAQpE,OAAM,MAAOC,gCAAgC;EAI3CC,YACUC,KAAqB,EACrBC,MAAc,EACdC,YAAiC;IAFjC,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAL,iBAAiB,GAAsB,IAAIA,iBAAiB,EAAE;IAC9D,KAAAM,YAAY,GAAW,EAAE;EAMtB;EAEHC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIJ,EAAE,EAAE;MACN,IAAI,CAACK,oBAAoB,CAACL,EAAE,CAAC;;EAEjC;EAEAK,oBAAoBA,CAACL,EAAU;IAC7B,IAAI,CAACH,YAAY,CAACQ,oBAAoB,CAACL,EAAE,CAAC,CAACM,SAAS,CACjDC,QAA2B,IAAI;MAC9B,IAAI,CAACf,iBAAiB,GAAGe,QAAQ;IACnC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE,CAAC,CACF;EACH;EAEAE,QAAQA,CAAA;IACN,MAAMV,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIJ,EAAE,EAAE;MACN,IAAI,CAACH,YAAY,CAACc,uBAAuB,CAACX,EAAE,EAAE,IAAI,CAACR,iBAAiB,CAAC,CAACc,SAAS,CAC5EC,QAA2B,IAAI;QAC9B,IAAI,CAACX,MAAM,CAACgB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;MAC/C,CAAC,EACAJ,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,IAAI,CAACV,YAAY,GAAG,2EAA2E;MACjG,CAAC,CACF;;EAEL;;AAzCWL,gCAAgC,C;mBAAhCA,gCAAgC,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,mBAAA;AAAA;AAAhC1B,gCAAgC,C;QAAhCA,gCAAgC;EAAA2B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0CAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV7Cb,EAAA,CAAAe,cAAA,UAAK;MACIf,EAAA,CAAAgB,MAAA,wBAAiB;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAChCjB,EAAA,CAAAe,cAAA,aAA2B;MACOf,EAAA,CAAAkB,UAAA,2BAAAC,yEAAAC,MAAA;QAAA,OAAAN,GAAA,CAAAnC,iBAAA,CAAA0C,YAAA,GAAAD,MAAA;MAAA,EAA4C;MAA5EpB,EAAA,CAAAiB,YAAA,EAAiH;MACjHjB,EAAA,CAAAe,cAAA,eAAoB;MAAAf,EAAA,CAAAgB,MAAA,UAAG;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC/BjB,EAAA,CAAAe,cAAA,eAAkH;MAAlFf,EAAA,CAAAkB,UAAA,2BAAAI,yEAAAF,MAAA;QAAA,OAAAN,GAAA,CAAAnC,iBAAA,CAAA0C,YAAA,GAAAD,MAAA;MAAA,EAA4C;MAA5EpB,EAAA,CAAAiB,YAAA,EAAkH;MAClHjB,EAAA,CAAAe,cAAA,eAAoB;MAAAf,EAAA,CAAAgB,MAAA,UAAG;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;;;MAHCjB,EAAA,CAAAuB,SAAA,GAA4C;MAA5CvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAAnC,iBAAA,CAAA0C,YAAA,CAA4C;MAE5CrB,EAAA,CAAAuB,SAAA,GAA4C;MAA5CvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAAnC,iBAAA,CAAA0C,YAAA,CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}