{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PatientbackService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7129/api/Patient';\n  }\n  create2(patient) {\n    return this.http.post(`${this.baseUrl}/create`, patient, {\n      observe: 'response'\n    });\n  }\n  edit(id, patient) {\n    return this.http.put(`${this.baseUrl}/edit/${id}`, patient, {\n      observe: 'response'\n    });\n  }\n  getPatient() {\n    console.log(this.http.get(this.apiUrl));\n    return this.http.get(this.apiUrl);\n  }\n}\nPatientbackService.ɵfac = function PatientbackService_Factory(t) {\n  return new (t || PatientbackService)(i0.ɵɵinject(i1.HttpClient));\n};\nPatientbackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PatientbackService,\n  factory: PatientbackService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PatientbackService","constructor","http","apiUrl","create2","patient","post","baseUrl","observe","edit","id","put","getPatient","console","log","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\services\\patientback.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Patient } from 'src/app/models/Patient';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientbackService {\r\n\r\n  private apiUrl = 'https://localhost:7129/api/Patient';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create2(patient: Patient): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/create`, patient, { observe: 'response' });\r\n  }\r\n\r\n  edit(id: number, patient: Patient): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/edit/${id}`, patient, { observe: 'response' });\r\n  }\r\n\r\n  getPatient(): Observable<Patient[]> {\r\n    console.log(this.http.get<Patient[]>(this.apiUrl));\r\n    return this.http.get<Patient[]>(this.apiUrl);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,OAAOA,CAACC,OAAgB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,SAAS,EAAEF,OAAO,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACnF;EAEAC,IAAIA,CAACC,EAAU,EAAEL,OAAgB;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,SAASG,EAAE,EAAE,EAAEL,OAAO,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC;EACtF;EAEAI,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAY,IAAI,CAACZ,MAAM,CAAC,CAAC;IAClD,OAAO,IAAI,CAACD,IAAI,CAACa,GAAG,CAAY,IAAI,CAACZ,MAAM,CAAC;EAC9C;;AAjBWH,kBAAkB,C;mBAAlBA,kBAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBnB,kBAAkB,C;SAAlBA,kBAAkB;EAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}