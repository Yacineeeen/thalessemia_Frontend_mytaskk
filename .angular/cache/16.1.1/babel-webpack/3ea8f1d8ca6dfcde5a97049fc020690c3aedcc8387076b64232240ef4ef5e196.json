{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TraitementChelateurReçu } from 'src/app/models/TraitementChelateurReçu';\nexport let TreatchelateurComponent = class TreatchelateurComponent {\n  constructor(treatChelateurService, chelateurService // Inject the Chelateur service\n  ) {\n    this.treatChelateurService = treatChelateurService;\n    this.chelateurService = chelateurService;\n    this.chelateurs = [];\n    this.traitements = [];\n  }\n  ngOnInit() {\n    this.loadChelateurs();\n  }\n  loadChelateurs() {\n    this.chelateurService.getAll().subscribe(data => {\n      this.chelateurs = data;\n    });\n  }\n  onChelateurChange(event) {\n    const chelateurId = +event.target.value;\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      // Initialize TraitementChelateurReçu and set ChelateurId\n      const newTraitement = new TraitementChelateurReçu();\n      newTraitement.ChelateurId = chelateurId;\n      this.traitements.push(newTraitement);\n    } else {\n      // Remove the TraitementChelateur instance for the deselected ChelateurId\n      this.traitements = this.traitements.filter(traitement => traitement.ChelateurId !== chelateurId);\n    }\n  }\n  isChecked(ChelateurId) {\n    return this.traitements.some(traitement => traitement.ChelateurId === ChelateurId);\n  }\n  onSubmit() {\n    this.traitements.forEach(traitement => {\n      this.treatChelateurService.add(traitement).subscribe(response => {\n        if (response.status === 200 || response.status === 201) {\n          console.log('Traitement added successfully', response);\n        } else {\n          console.error('Unexpected response status', response.status);\n        }\n      }, error => {\n        console.error('Error adding Traitement', error);\n      });\n    });\n  }\n};\nTreatchelateurComponent = __decorate([Component({\n  selector: 'app-treatchelateur',\n  templateUrl: './treatchelateur.component.html',\n  styleUrls: ['./treatchelateur.component.css']\n})], TreatchelateurComponent);","map":{"version":3,"names":["Component","TraitementChelateurReçu","TreatchelateurComponent","constructor","treatChelateurService","chelateurService","chelateurs","traitements","ngOnInit","loadChelateurs","getAll","subscribe","data","onChelateurChange","event","chelateurId","target","value","isChecked","checked","newTraitement","ChelateurId","push","filter","traitement","some","onSubmit","forEach","add","response","status","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\treatchelateur\\treatchelateur.component.ts"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Chelateur } from 'src/app/models/Chelateur';\r\nimport { TraitementChelateurReçu } from 'src/app/models/TraitementChelateurReçu';\r\nimport { ChelateurServiceService } from 'src/app/services/chelateur-service.service';\r\nimport { TreatChelateurService } from 'src/app/services/treat-chelateur.service';\r\n\r\n@Component({\r\n  selector: 'app-treatchelateur',\r\n  templateUrl: './treatchelateur.component.html',\r\n  styleUrls: ['./treatchelateur.component.css']\r\n})\r\n  export class TreatchelateurComponent implements OnInit {\r\n    chelateurs: Chelateur[] = [];\r\n    traitements: TraitementChelateurReçu[] = [];\r\n  \r\n    constructor(\r\n      private treatChelateurService: TreatChelateurService,\r\n      private chelateurService: ChelateurServiceService // Inject the Chelateur service\r\n    ) { }\r\n  \r\n    ngOnInit() {\r\n      this.loadChelateurs();\r\n    }\r\n  \r\n    loadChelateurs() {\r\n      this.chelateurService.getAll().subscribe((data: Chelateur[]) => {\r\n        this.chelateurs = data;\r\n      });\r\n    }\r\n  \r\n    onChelateurChange(event: any) {\r\n      const chelateurId = +event.target.value;\r\n      const isChecked = event.target.checked;\r\n    \r\n      if (isChecked) {\r\n        // Initialize TraitementChelateurReçu and set ChelateurId\r\n        const newTraitement = new TraitementChelateurReçu();\r\n        newTraitement.ChelateurId = chelateurId;\r\n        this.traitements.push(newTraitement);\r\n      } else {\r\n        // Remove the TraitementChelateur instance for the deselected ChelateurId\r\n        this.traitements = this.traitements.filter(traitement => traitement.ChelateurId !== chelateurId);\r\n      }\r\n    }\r\n    \r\n  \r\n    isChecked(ChelateurId: number): boolean {\r\n      return this.traitements.some(traitement => traitement.ChelateurId === ChelateurId);\r\n    }\r\n  \r\n    onSubmit() {\r\n      this.traitements.forEach(traitement => {\r\n        this.treatChelateurService.add(traitement).subscribe(\r\n          (response: HttpResponse<any>) => {\r\n            if (response.status === 200 || response.status === 201) {\r\n              console.log('Traitement added successfully', response);\r\n            } else {\r\n              console.error('Unexpected response status', response.status);\r\n            }\r\n          },\r\n          error => {\r\n            console.error('Error adding Traitement', error);\r\n          }\r\n        );\r\n      });\r\n    }\r\n  }"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,uBAAuB,QAAQ,wCAAwC;AASvE,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAIlCC,YACUC,qBAA4C,EAC5CC,gBAAyC,CAAC;EAAA,E;IAD1C,KAAAD,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAL1B,KAAAC,UAAU,GAAgB,EAAE;IAC5B,KAAAC,WAAW,GAA8B,EAAE;EAKvC;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACJ,gBAAgB,CAACK,MAAM,EAAE,CAACC,SAAS,CAAEC,IAAiB,IAAI;MAC7D,IAAI,CAACN,UAAU,GAAGM,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAC,iBAAiBA,CAACC,KAAU;IAC1B,MAAMC,WAAW,GAAG,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK;IACvC,MAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAM,CAACG,OAAO;IAEtC,IAAID,SAAS,EAAE;MACb;MACA,MAAME,aAAa,GAAG,IAAInB,uBAAuB,EAAE;MACnDmB,aAAa,CAACC,WAAW,GAAGN,WAAW;MACvC,IAAI,CAACR,WAAW,CAACe,IAAI,CAACF,aAAa,CAAC;KACrC,MAAM;MACL;MACA,IAAI,CAACb,WAAW,GAAG,IAAI,CAACA,WAAW,CAACgB,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACH,WAAW,KAAKN,WAAW,CAAC;;EAEpG;EAGAG,SAASA,CAACG,WAAmB;IAC3B,OAAO,IAAI,CAACd,WAAW,CAACkB,IAAI,CAACD,UAAU,IAAIA,UAAU,CAACH,WAAW,KAAKA,WAAW,CAAC;EACpF;EAEAK,QAAQA,CAAA;IACN,IAAI,CAACnB,WAAW,CAACoB,OAAO,CAACH,UAAU,IAAG;MACpC,IAAI,CAACpB,qBAAqB,CAACwB,GAAG,CAACJ,UAAU,CAAC,CAACb,SAAS,CACjDkB,QAA2B,IAAI;QAC9B,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UACtDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,QAAQ,CAAC;SACvD,MAAM;UACLE,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEJ,QAAQ,CAACC,MAAM,CAAC;;MAEhE,CAAC,EACDG,KAAK,IAAG;QACNF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CACF;IACH,CAAC,CAAC;EACJ;CACD;AAvDY/B,uBAAuB,GAAAgC,UAAA,EALrClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACanC,uBAAuB,CAuDnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}