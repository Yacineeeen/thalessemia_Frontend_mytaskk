{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../Models/user';\nexport let StatusComponent = class StatusComponent {\n  constructor(userbackService) {\n    this.userbackService = userbackService;\n    this.user = new User();\n  }\n  formatDateToYYYYMMDD(date) {\n    return date.toISOString().split('T')[0];\n  }\n  onSubmit() {\n    const now = new Date();\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now); // Format `yyyy-MM-dd`\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\n    if (this.user.activeUntil) {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\n    } else {\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\n    }\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\n    const userToSend = {\n      ...this.user,\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\n      activeUntil: new Date(this.user.activeUntil).toISOString()\n    };\n    this.userbackService.addUser(userToSend).subscribe(response => {\n      console.log('User added successfully', response);\n    }, error => {\n      console.error('Error adding user', error);\n    });\n  }\n};\nStatusComponent = __decorate([Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})], StatusComponent);","map":{"version":3,"names":["Component","User","StatusComponent","constructor","userbackService","user","formatDateToYYYYMMDD","date","toISOString","split","onSubmit","now","Date","dateCreation","activeUntil","userToSend","addUser","subscribe","response","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\pages\\status\\status.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { User } from '../Models/user';\r\nimport { UserbackService } from '../Services/userback.service';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent {\r\n  user: User = new User();\r\n\r\n  constructor(private userbackService: UserbackService) { }\r\n\r\n  private formatDateToYYYYMMDD(date: Date): string {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  onSubmit() {\r\n    const now = new Date();\r\n    this.user.dateCreation = this.formatDateToYYYYMMDD(now);  // Format `yyyy-MM-dd`\r\n\r\n    // Convertir activeUntil en format `yyyy-MM-dd` si c'est une date valide\r\n    if (this.user.activeUntil) {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(new Date(this.user.activeUntil));\r\n    } else {\r\n      this.user.activeUntil = this.formatDateToYYYYMMDD(now); // Exemple : utiliser la date actuelle si activeUntil n'est pas définie\r\n    }\r\n\r\n    // Convertir les dates en format ISO 8601 avant de les envoyer au backend\r\n    const userToSend = {\r\n      ...this.user,\r\n      dateCreation: new Date(this.user.dateCreation).toISOString(),\r\n      activeUntil: new Date(this.user.activeUntil).toISOString()\r\n    };\r\n\r\n    this.userbackService.addUser(userToSend).subscribe(\r\n      response => {\r\n        console.log('User added successfully', response);\r\n      },\r\n      error => {\r\n        console.error('Error adding user', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,IAAI,QAAQ,gBAAgB;AAQ9B,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,IAAI,GAAS,IAAIJ,IAAI,EAAE;EAEiC;EAEhDK,oBAAoBA,CAACC,IAAU;IACrC,OAAOA,IAAI,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC;EAEAC,QAAQA,CAAA;IACN,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAI,CAACP,IAAI,CAACQ,YAAY,GAAG,IAAI,CAACP,oBAAoB,CAACK,GAAG,CAAC,CAAC,CAAE;IAE1D;IACA,IAAI,IAAI,CAACN,IAAI,CAACS,WAAW,EAAE;MACzB,IAAI,CAACT,IAAI,CAACS,WAAW,GAAG,IAAI,CAACR,oBAAoB,CAAC,IAAIM,IAAI,CAAC,IAAI,CAACP,IAAI,CAACS,WAAW,CAAC,CAAC;KACnF,MAAM;MACL,IAAI,CAACT,IAAI,CAACS,WAAW,GAAG,IAAI,CAACR,oBAAoB,CAACK,GAAG,CAAC,CAAC,CAAC;;IAG1D;IACA,MAAMI,UAAU,GAAG;MACjB,GAAG,IAAI,CAACV,IAAI;MACZQ,YAAY,EAAE,IAAID,IAAI,CAAC,IAAI,CAACP,IAAI,CAACQ,YAAY,CAAC,CAACL,WAAW,EAAE;MAC5DM,WAAW,EAAE,IAAIF,IAAI,CAAC,IAAI,CAACP,IAAI,CAACS,WAAW,CAAC,CAACN,WAAW;KACzD;IAED,IAAI,CAACJ,eAAe,CAACY,OAAO,CAACD,UAAU,CAAC,CAACE,SAAS,CAChDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;IAClD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CACF;EACH;CACD;AApCYnB,eAAe,GAAAoB,UAAA,EAL3BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWvB,eAAe,CAoC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}