{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoeurserviceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7129/api/ComplicationCoeurs';\n  }\n  addcompcoeur(ComplicationCoeur) {\n    console.log('Creating it with data:', ComplicationCoeur);\n    return this.http.post(`${this.apiUrl}/addcompcoeur`, ComplicationCoeur, {\n      observe: 'response'\n    });\n  }\n  getComplicationCoeurById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n  updateComplicationCoeur(id, complicationCoeur) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.put(`${this.apiUrl}/update${id}`, complicationCoeur, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\nCoeurserviceService.ɵfac = function CoeurserviceService_Factory(t) {\n  return new (t || CoeurserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoeurserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoeurserviceService,\n  factory: CoeurserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","catchError","throwError","CoeurserviceService","constructor","http","apiUrl","addcompcoeur","ComplicationCoeur","console","log","post","observe","getComplicationCoeurById","id","get","pipe","handleError","updateComplicationCoeur","complicationCoeur","headers","put","error","errorMessage","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\elabe\\Desktop\\ThalassemiaFront\\src\\app\\services\\coeurservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { ComplicationCoeur } from '../models/ComplicationCoeur';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class CoeurserviceService {\r\n\r\n  private apiUrl = 'https://localhost:7129/api/ComplicationCoeurs';\r\n\r\n  constructor(private http: HttpClient) { }\r\n  addcompcoeur(ComplicationCoeur: ComplicationCoeur): Observable<HttpResponse<any>> {\r\n    console.log('Creating it with data:', ComplicationCoeur);\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/addcompcoeur`, ComplicationCoeur, { observe: 'response' });\r\n  }\r\n  getComplicationCoeurById(id: number): Observable<ComplicationCoeur> {\r\n    return this.http.get<ComplicationCoeur>(`${this.apiUrl}/${id}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateComplicationCoeur(id: number, complicationCoeur: ComplicationCoeur): Observable<any> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.put(`${this.apiUrl}/update${id}`, complicationCoeur, { headers })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n \r\n\r\n\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAsB,sBAAsB;AAC5E,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;AAQzD,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+CAA+C;EAExB;EACxCC,YAAYA,CAACC,iBAAoC;IAC/CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,iBAAiB,CAAC;IAExD,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,MAAM,eAAe,EAAEE,iBAAiB,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC;EACvG;EACAC,wBAAwBA,CAACC,EAAU;IACjC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAoB,GAAG,IAAI,CAACT,MAAM,IAAIQ,EAAE,EAAE,CAAC,CAC5DE,IAAI,CACHf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACL;EAEAC,uBAAuBA,CAACJ,EAAU,EAAEK,iBAAoC;IACtE,MAAMC,OAAO,GAAG,IAAIpB,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACK,IAAI,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACf,MAAM,UAAUQ,EAAE,EAAE,EAAEK,iBAAiB,EAAE;MAAEC;IAAO,CAAE,CAAC,CAC/EJ,IAAI,CACHf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACL;EAEQA,WAAWA,CAACK,KAAU;IAC5B,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrCD,YAAY,GAAG,UAAUD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;KAC/C,MAAM;MACLF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzE,OAAOvB,UAAU,CAACqB,YAAY,CAAC;EACjC;;AAjCWpB,mBAAmB,C;mBAAnBA,mBAAmB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnB3B,mBAAmB,C;SAAnBA,mBAAmB;EAAA4B,OAAA,EAAnB5B,mBAAmB,CAAA6B,IAAA;EAAAC,UAAA,EAJlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}